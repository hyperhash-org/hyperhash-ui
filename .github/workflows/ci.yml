name: CIon:  push:    branches: [ main, "ci/*" ]  pull_request:jobs:  lint-test:    runs-on: ubuntu-latest    steps:      - uses: actions/checkout@v4      - name: Detect project type        run: |          if [ -f go.mod ]; then echo "lang=go" >> \; fi          if [ -f Cargo.toml ]; then echo "lang=rust" >> \; fi          if [ -f package.json ]; then echo "lang=node" >> \; fi      # Go      - name: Set up Go        if: env.lang == 'go'        uses: actions/setup-go@v5        with:          go-version: '1.22'      - name: Go build & vet (placeholder)        if: env.lang == 'go'        run: |          go mod download          go build ./... || true          go vet ./... || true      # Rust      - name: Set up Rust        if: env.lang == 'rust'        uses: dtolnay/rust-toolchain@stable      - name: Rust check & fmt (placeholder)        if: env.lang == 'rust'        run: |          cargo fetch          cargo check --all-targets || true          cargo fmt --all -- --check || true || true          cargo test -q || true || true      # Node      - name: Set up Node        if: env.lang == 'node'        uses: actions/setup-node@v4        with:          node-version: '20'      - name: Node install & lint/test (placeholder)        if: env.lang == 'node'        run: |          npm ci || npm install          npm run lint --if-present || true || echo "no lint script"          npm test --if-present || true || echo "no tests"      # Fallback (docs/specs)      - name: Docs/specs placeholder        if: env.lang == ''        run: echo "No buildable project detected; docs/specs placeholder CI"